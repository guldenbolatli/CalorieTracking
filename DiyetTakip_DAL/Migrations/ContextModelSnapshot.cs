// <auto-generated />
using System;
using DiyetTakip_DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiyetTakip_DAL.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiyetTakip_Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("AktifMİ")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("AdminMi")
                        .HasColumnType("bit");

                    b.Property<double>("BazalMetobalizma")
                        .HasColumnType("float");

                    b.Property<string>("BeslenmeTercihi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Boy")
                        .HasColumnType("int");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<string>("DiyetZorlukSeviyesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<double>("GunlukKaloriIhtiyaci")
                        .HasColumnType("float");

                    b.Property<string>("HareketSeviyesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kilo")
                        .HasColumnType("float");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("VucutKitleEndeksi")
                        .HasColumnType("float");

                    b.HasKey("KullaniciID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            KullaniciID = 1,
                            Ad = "admin",
                            AdminMi = true,
                            BazalMetobalizma = 0.0,
                            BeslenmeTercihi = "",
                            Boy = 1,
                            Cinsiyet = true,
                            DiyetZorlukSeviyesi = "",
                            DogumTarihi = new DateTime(1998, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin1",
                            GunlukKaloriIhtiyaci = 0.0,
                            HareketSeviyesi = "",
                            Kilo = 0.0,
                            Sifre = "123",
                            Soyad = "1",
                            VucutKitleEndeksi = 0.0
                        },
                        new
                        {
                            KullaniciID = 2,
                            Ad = "admin",
                            AdminMi = true,
                            BazalMetobalizma = 0.0,
                            BeslenmeTercihi = "",
                            Boy = 1,
                            Cinsiyet = true,
                            DiyetZorlukSeviyesi = "",
                            DogumTarihi = new DateTime(1998, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin2",
                            GunlukKaloriIhtiyaci = 0.0,
                            HareketSeviyesi = "",
                            Kilo = 0.0,
                            Sifre = "123",
                            Soyad = "2",
                            VucutKitleEndeksi = 0.0
                        },
                        new
                        {
                            KullaniciID = 3,
                            Ad = "admin",
                            AdminMi = true,
                            BazalMetobalizma = 0.0,
                            BeslenmeTercihi = "",
                            Boy = 1,
                            Cinsiyet = true,
                            DiyetZorlukSeviyesi = "",
                            DogumTarihi = new DateTime(1998, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin3",
                            GunlukKaloriIhtiyaci = 0.0,
                            HareketSeviyesi = "",
                            Kilo = 0.0,
                            Sifre = "123",
                            Soyad = "3",
                            VucutKitleEndeksi = 0.0
                        });
                });

            modelBuilder.Entity("DiyetTakip_Entities.KullaniciYiyecekAlerji", b =>
                {
                    b.Property<int>("KullaniciYiyecekAlerjiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciYiyecekAlerjiID"), 1L, 1);

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("YiyecekID")
                        .HasColumnType("int");

                    b.HasKey("KullaniciYiyecekAlerjiID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("YiyecekID");

                    b.ToTable("KullaniciYiyecekAlerjiler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Ogun", b =>
                {
                    b.Property<int>("OgunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgunId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("AktifMİ")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("OgunId");

                    b.ToTable("Ogunler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.OgunTakibi", b =>
                {
                    b.Property<int>("OgunTakibiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgunTakibiID"), 1L, 1);

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("OgunID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<float>("UrunToplamKalori")
                        .HasColumnType("real");

                    b.Property<int>("YiyecekID")
                        .HasColumnType("int");

                    b.HasKey("OgunTakibiID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("OgunID");

                    b.HasIndex("YiyecekID");

                    b.ToTable("OgunTakipleri");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Tarif", b =>
                {
                    b.Property<int>("TarifID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarifID"), 1L, 1);

                    b.Property<bool?>("AktifMİ")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("HazirlamaSuresi")
                        .HasColumnType("int");

                    b.Property<string>("TarifDetayi")
                        .HasColumnType("nvarchar");

                    b.Property<int>("YiyecekID")
                        .HasColumnType("int");

                    b.HasKey("TarifID");

                    b.HasIndex("YiyecekID")
                        .IsUnique();

                    b.ToTable("Tarifler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Yiyecek", b =>
                {
                    b.Property<int>("YiyecekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YiyecekID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("AktifMİ")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar");

                    b.Property<double>("Kalori")
                        .HasColumnType("float");

                    b.Property<double>("KarbonhidratMiktari")
                        .HasColumnType("float");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("MiktarTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("ProteinMiktari")
                        .HasColumnType("float");

                    b.Property<double>("YagMiktari")
                        .HasColumnType("float");

                    b.HasKey("YiyecekID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Yiyecekler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.KullaniciYiyecekAlerji", b =>
                {
                    b.HasOne("DiyetTakip_Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciAlerjileri")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetTakip_Entities.Yiyecek", "Yiyecek")
                        .WithMany("AlerjisiOlanKullanicilar")
                        .HasForeignKey("YiyecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Yiyecek");
                });

            modelBuilder.Entity("DiyetTakip_Entities.OgunTakibi", b =>
                {
                    b.HasOne("DiyetTakip_Entities.Kullanici", "Kullanici")
                        .WithMany("KullanicininOgundeYedigiYiyecekler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetTakip_Entities.Ogun", "Ogun")
                        .WithMany("OgundeKullancilarinYedigiYiyecekler")
                        .HasForeignKey("OgunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetTakip_Entities.Yiyecek", "Yiyecek")
                        .WithMany("YiyeceginYendigiKullaniciOgunleri")
                        .HasForeignKey("YiyecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Ogun");

                    b.Navigation("Yiyecek");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Tarif", b =>
                {
                    b.HasOne("DiyetTakip_Entities.Yiyecek", "Yiyecek")
                        .WithOne("Tarif")
                        .HasForeignKey("DiyetTakip_Entities.Tarif", "YiyecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yiyecek");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Yiyecek", b =>
                {
                    b.HasOne("DiyetTakip_Entities.Kategori", "Kategori")
                        .WithMany("Yiyecekler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Kategori", b =>
                {
                    b.Navigation("Yiyecekler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciAlerjileri");

                    b.Navigation("KullanicininOgundeYedigiYiyecekler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Ogun", b =>
                {
                    b.Navigation("OgundeKullancilarinYedigiYiyecekler");
                });

            modelBuilder.Entity("DiyetTakip_Entities.Yiyecek", b =>
                {
                    b.Navigation("AlerjisiOlanKullanicilar");

                    b.Navigation("Tarif")
                        .IsRequired();

                    b.Navigation("YiyeceginYendigiKullaniciOgunleri");
                });
#pragma warning restore 612, 618
        }
    }
}
